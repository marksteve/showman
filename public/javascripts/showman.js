// Generated by CoffeeScript 1.3.3
var showman;

bespoke.plugins.center = function(deck) {
  return deck.slides.forEach(function(slide) {
    var centerWrapper, children;
    centerWrapper = document.createElement("div");
    centerWrapper.className = "bespoke-center-wrapper";
    children = [].slice.call(slide.childNodes, 0);
    children.forEach(function(child) {
      slide.removeChild(child);
      centerWrapper.appendChild(child);
    });
    slide.appendChild(centerWrapper);
    return centerWrapper.style.marginTop = ((slide.offsetHeight - centerWrapper.offsetHeight) / 2) + "px";
  });
};

showman = {
  slides: false,
  rc: false,
  socket: io.connect(location.origin),
  init: function(page) {
    showman.socket.on("connect", function() {
      return console.log("Connected", showman.socket.socket.sessionid);
    });
    return $(document).imagesLoaded(function() {
      $(".loading").remove();
      showman.index = 0;
      switch (page) {
        case "slides":
          showman.deck = bespoke.horizontal.from("article", {
            bullets: true,
            center: true
          });
          showman.socket.on("next", function(data) {
            return showman.deck.next();
          });
          showman.socket.on("prev", function(data) {
            return showman.deck.prev();
          });
          showman.socket.on("slide", function(data) {
            return showman.deck.slide(data);
          });
          showman.deck.on("activate", function(e) {
            return showman.socket.emit("index", e.index);
          });
          break;
        case "rc":
          showman.deck = bespoke.from("article", {
            center: true
          });
          Hammer(showman.deck.parent).on("tap", function(e) {
            return showman.socket.emit("next");
          }).on("swipeleft", function(e) {
            if (showman.index + 1 < showman.deck.slides.length) {
              ++showman.index;
            } else {
              showman.index;
            }
            return showman.socket.emit("slide", showman.index);
          }).on("swiperight", function(e) {
            if (showman.index - 1 >= 0) {
              --showman.index;
            } else {
              showman.index;
            }
            return showman.socket.emit("slide", showman.index);
          });
          showman.socket.on("index", function(data) {
            showman.index = data;
            return showman.deck.slide(showman.index);
          });
      }
    });
  }
};
